#!/usr/bin/env ruby
# purpose: centralize and wrap some table creation
require 'bundler/setup'
require 'aws-sdk'

def client
  Aws::DynamoDB::Client.new(region: 'us-east-1')
end

def create_table(table_name, config)
  if client.list_tables.table_names.include?(table_name)
    puts "#{table_name} exists"
  else
    puts "creating #{table_name}"
    config.merge!(table_name: table_name)
    client.create_table(config)
    puts "done"
  end
end

create_table('pinto_gps', {
 attribute_definitions: [
    {
      attribute_name: "ip",
      attribute_type: "S", # S, N, B
    },
    {
      attribute_name: "date",
      attribute_type: "S",
    },
    {
      attribute_name: "etime",
      attribute_type: "N",
    },
  ],
  key_schema: [
    {
      attribute_name: "ip",
      key_type: "HASH",
    },
    {
      attribute_name: "date",
      key_type: "RANGE",
    },
  ],
  global_secondary_indexes: [
    {
      index_name: "etime-index",
      key_schema: [
        {
          attribute_name: "date",
          key_type: "HASH",
        },
        {
          attribute_name: "etime",
          key_type: "RANGE",
        },
      ],
      projection: {
        projection_type: "ALL",
      },
      provisioned_throughput: {
        read_capacity_units: 1,
        write_capacity_units: 1,
      },
    },
  ],
  provisioned_throughput: {
    read_capacity_units: 1,
    write_capacity_units: 1,
  },
})
